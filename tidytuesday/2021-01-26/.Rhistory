# README : https://github.com/rfordatascience/tidytuesday/blob/master/data/2021/2021-01-26/readme.md
# The data this week comes from Break Free from Plastic courtesy of Sarah Sauve.
#
# Sarah put together a nice Blogpost on her approach to this data, which includes
# cleaning the data and a Shiny app!
#
#   Per Sarah:
#
#   I found out about Break Free From Plastic's Brand Audits through my involvement
# with the local Social Justice Cooperative of Newfoundland and Labrador's Zero Waste
# Action Team.
#
# One of my colleagues and friends proposed an audit in St. John's, partially to
# contribute to the global audit and as part of a bigger project to understand the
# sources of plastic in our city. We completed our audit in October 2020 and are the
# first submission to BFFP from Newfoundland! You can find our data presented in this
# Shiny dashboard.
#
# It's an interesting dataset, with lots of room to play around and so many options
# for visualization, plus plastic pollution is an important topic to talk about and
# raise awareness of! You can read BFFP's Brand Audit Reports for 2018, 2019 and
# 2020 to get an idea of what they've done with the data.
# Read in data ---------------------------------------
tuesdata <- tidytuesdayR::tt_load('2021-01-26')
plastics <- tuesdata$plastic
# Clean data a bit -------------------------------------
table(plastics$country)
plastics$country[plastics$country == "Cote D_ivoire"] <- "Cote d'Ivoire"
plastics$country[plastics$country == "EMPTY"] <- ""
plastics$country[plastics$country == "ECUADOR"] <- "Ecuador"
plastics$country[plastics$country == "NIGERIA"] <- "Nigeria"
plastics$country[plastics$country == "United Kingdom of Great Britain & Northern Ireland"] <- "United Kingdom"
plastics$country[plastics$country == "Taiwan_ Republic of China (ROC)"] <- "Taiwan"
table(plastics$country)
# Create a table of nodes ----------------------------------------------
# Create the df of names (source and target) for labeling
nodes <- data.frame()
countries <- unique(as.data.frame(plastics$country))
colnames(countries) <- "name"
companies <- unique(as.data.frame(plastics$parent_company))
colnames(companies) <- "name"
nodes <- as.data.frame(rbind(nodes, countries, companies))
head(nodes)
# Create zero-indexed ID, pass it to row names
nodes$id <- seq.int(nrow(nodes)) -1
rownames(nodes) <- nodes$id
# Create a table of links ---------------------------------------------------
# Create a 'to' and 'from' linker dataframe (in this case between company and country)
links <- plastics[c("country","parent_company","grand_total")]
links <- left_join(links, nodes, by = c("country" = "name"))
colnames(links) <- c("country","parent_company","value", "target")
links <- left_join(links, nodes, by = c("parent_company" = "name"))
colnames(links) <- c("country","parent_company","value", "target","source")
links <- as.data.frame(links[c("source","target","value")])
# Convert to numeric
links$target <- as.numeric(links$target)
links$source <- as.numeric(links$source)
# Drop missing values
links <- links[!is.na(links$value),]
View(plastics)
unique(plastics$country)
plastics <- plastics %>%
filter(country == "United States of America")
# Create the df of names (source and target) for labeling
nodes <- data.frame()
countries <- unique(as.data.frame(plastics$country))
colnames(countries) <- "name"
companies <- unique(as.data.frame(plastics$parent_company))
colnames(companies) <- "name"
companies
# Set up environment ---------------------------------------
list.of.packages <- c("tidytuesdayR","tidyverse","networkD3","htmlwidgets")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, require, character.only = TRUE)
# Info on data ---------------------------------------
# README : https://github.com/rfordatascience/tidytuesday/blob/master/data/2021/2021-01-26/readme.md
# The data this week comes from Break Free from Plastic courtesy of Sarah Sauve.
#
# Sarah put together a nice Blogpost on her approach to this data, which includes
# cleaning the data and a Shiny app!
#
#   Per Sarah:
#
#   I found out about Break Free From Plastic's Brand Audits through my involvement
# with the local Social Justice Cooperative of Newfoundland and Labrador's Zero Waste
# Action Team.
#
# One of my colleagues and friends proposed an audit in St. John's, partially to
# contribute to the global audit and as part of a bigger project to understand the
# sources of plastic in our city. We completed our audit in October 2020 and are the
# first submission to BFFP from Newfoundland! You can find our data presented in this
# Shiny dashboard.
#
# It's an interesting dataset, with lots of room to play around and so many options
# for visualization, plus plastic pollution is an important topic to talk about and
# raise awareness of! You can read BFFP's Brand Audit Reports for 2018, 2019 and
# 2020 to get an idea of what they've done with the data.
# Read in data ---------------------------------------
tuesdata <- tidytuesdayR::tt_load('2021-01-26')
plastics <- tuesdata$plastic
# Clean data a bit -------------------------------------
table(plastics$country)
plastics$country[plastics$country == "Cote D_ivoire"] <- "Cote d'Ivoire"
plastics$country[plastics$country == "EMPTY"] <- ""
plastics$country[plastics$country == "ECUADOR"] <- "Ecuador"
plastics$country[plastics$country == "NIGERIA"] <- "Nigeria"
plastics$country[plastics$country == "United Kingdom of Great Britain & Northern Ireland"] <- "United Kingdom"
plastics$country[plastics$country == "Taiwan_ Republic of China (ROC)"] <- "Taiwan"
table(plastics$country)
plastics$year
plastics$year %>% table()
plastics %>%
filter(parent_company == "Grand Total")
plastics %>%
filter(parent_company == "Grand Total") %>%
filter(year == 2019) %>%
ggplot(aes(x = as.factor(country), y = grand_total)) +
geom_bar(stat = "identity") +
theme_minimal() +
coord_polar(start = 0)
plastics %>%
filter(year == 2019) %>%
group_by(parent_company) %>%
summarise(total = sum(grand_total))
plastics %>%
filter(year == 2019) %>%
group_by(parent_company) %>%
summarise(total = sum(grand_total)) %>%
arrange(desc(total))
plastics %>%
filter(year == 2019) %>%
group_by(parent_company) %>%
summarise(total = sum(grand_total)) %>%
arrange(desc(total)) %>%
filter(parent_company %in% c("Grand Total", "Unbranded", "Assorted"))
plastics %>%
filter(year == 2019) %>%
group_by(parent_company) %>%
summarise(total = sum(grand_total)) %>%
arrange(desc(total)) %>%
filter(!parent_company %in% c("Grand Total", "Unbranded", "Assorted"))
plastics %>%
filter(year == 2019) %>%
group_by(parent_company) %>%
summarise(total = sum(grand_total)) %>%
arrange(desc(total)) %>%
filter(!parent_company %in% c("Grand Total", "Unbranded", "Assorted")) +
ggplot(aes(x = as.factor(country), y = grand_total, )) +
geom_bar(stat = "identity") +
theme_minimal() +
coord_polar(start = 0)
plastics %>%
filter(year == 2019) %>%
group_by(parent_company) %>%
summarise(total = sum(grand_total)) %>%
arrange(desc(total)) %>%
filter(!parent_company %in% c("Grand Total", "Unbranded", "Assorted")) +
ggplot(aes(x = as.factor(parent_company), y = total, fill = total)) +
geom_bar(stat = "identity") +
theme_minimal() +
coord_polar(start = 0)
plastics %>%
filter(year == 2019) %>%
group_by(parent_company) %>%
summarise(total = sum(grand_total)) %>%
arrange(desc(total)) %>%
filter(!parent_company %in% c("Grand Total", "Unbranded", "Assorted")) %>%
ggplot(aes(x = as.factor(parent_company), y = total, fill = total)) +
geom_bar(stat = "identity") +
theme_minimal() +
coord_polar(start = 0)
plastics %>%
filter(year == 2019) %>%
group_by(parent_company) %>%
summarise(total = sum(grand_total)) %>%
arrange(desc(total)) %>%
filter(!parent_company %in% c("Grand Total", "Unbranded", "Assorted")) %>%
slice(1:100)
plastics %>%
filter(year == 2019) %>%
group_by(parent_company) %>%
summarise(total = sum(grand_total)) %>%
arrange(desc(total)) %>%
filter(!parent_company %in% c("Grand Total", "Unbranded", "Assorted")) %>%
slice(1:100)
plastics %>%
filter(year == 2019) %>%
group_by(parent_company) %>%
summarise(total = sum(grand_total)) %>%
arrange(desc(total)) %>%
filter(!parent_company %in% c("Grand Total", "Unbranded", "Assorted")) %>%
slice(1:50) %>%
ggplot(aes(x = as.factor(parent_company), y = total, fill = total)) +
geom_bar(stat = "identity") +
theme_minimal() +
coord_polar(start = 0)
plastics %>%
filter(year == 2019) %>%
group_by(parent_company) %>%
summarise(total = sum(grand_total)) %>%
arrange(desc(total)) %>%
filter(!parent_company %in% c("Grand Total", "Unbranded", "Assorted")) %>%
slice(1:25) %>%
ggplot(aes(x = as.factor(parent_company), y = total, fill = total)) +
geom_bar(stat = "identity") +
theme_minimal() +
coord_polar(start = 0)
plastics %>%
filter(year == 2019) %>%
group_by(parent_company) %>%
summarise(total = sum(grand_total)) %>%
arrange(desc(total)) %>%
filter(!parent_company %in% c("Grand Total", "Unbranded", "Assorted")) %>%
slice(1:25) %>%
ggplot(aes(x = as.factor(parent_company), y = total, fill = total)) +
geom_bar(stat = "identity") +
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")
) +
coord_polar(start = 0)
plastics %>%
filter(year == 2019) %>%
group_by(parent_company) %>%
summarise(total = sum(grand_total)) %>%
arrange(desc(total)) %>%
filter(!parent_company %in% c("Grand Total", "Unbranded", "Assorted")) %>%
slice(1:25) %>%
ggplot(aes(x = as.factor(parent_company), y = total, fill = total)) +
geom_bar(stat = "identity") +
theme_minimal() +
theme(
#axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")
) +
coord_polar(start = 0) +
geom_text(data=label_data,
aes(x=id, y=value+10, label=individual, hjust=hjust),
color="black", fontface="bold",alpha=0.6, size=2.5,
angle= label_data$angle, inherit.aes = FALSE )
plastics %>%
filter(year == 2019) %>%
group_by(parent_company) %>%
summarise(total = sum(grand_total)) %>%
arrange(desc(total)) %>%
filter(!parent_company %in% c("Grand Total", "Unbranded", "Assorted")) %>%
slice(1:25) %>%
ggplot(aes(x = as.factor(parent_company), y = total, fill = total)) +
geom_bar(stat = "identity") +
theme_minimal() +
theme(
#axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")
) +
coord_polar(start = 0)
plastics %>%
filter(year == 2019) %>%
group_by(parent_company) %>%
summarise(total = sum(grand_total)) %>%
arrange(desc(total)) %>%
filter(!parent_company %in% c("Grand Total", "Unbranded", "Assorted")) %>%
slice(1:25) %>%
arrange(total) %>%
ggplot(aes(x = as.factor(parent_company), y = total, fill = total)) +
geom_bar(stat = "identity") +
theme_minimal() +
theme(
#axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")
) +
coord_polar(start = 0)
plastics %>%
filter(year == 2019) %>%
group_by(parent_company) %>%
summarise(total = sum(grand_total)) %>%
arrange(desc(total)) %>%
filter(!parent_company %in% c("Grand Total", "Unbranded", "Assorted")) %>%
slice(1:25) %>%
arrange(total) %>%
ggplot(aes(x = parent_company, y = total, fill = total)) +
geom_bar(stat = "identity") +
theme_minimal() +
theme(
#axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")
) +
coord_polar(start = 0)
df_byCompany <- plastics %>%
filter(year == 2019) %>%
group_by(parent_company) %>%
summarise(total = sum(grand_total)) %>%
arrange(desc(total)) %>%
filter(!parent_company %in% c("Grand Total", "Unbranded", "Assorted")) %>%
slice(1:25) %>%
arrange(total)
label_data <- df_byCompany
number_of_bar <- nrow(label_data)
angle <- 90 - 360 * (label_data$id-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
label_data <- df_byCompany %>%
mutate(id = row_number)
number_of_bar <- nrow(label_data)
angle <- 90 - 360 * (label_data$id-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
label_data
label_data <- df_byCompany %>%
mutate(id = row_number)
label_data <- df_byCompany %>%
mutate(id = row_number())
number_of_bar <- nrow(label_data)
angle <- 90 - 360 * (label_data$id-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
label_data$hjust <- ifelse( angle < -90, 1, 0)
label_data$angle <- ifelse(angle < -90, angle+180, angle)
df_byCompany %>%
ggplot(aes(x = parent_company, y = total, fill = total)) +
geom_bar(stat = "identity") +
theme_minimal() +
theme(
#axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")
) +
coord_polar(start = 0)
df_byCompany %>%
ggplot(aes(x = parent_company, y = total, fill = total)) +
geom_bar(stat = "identity") +
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")
) +
coord_polar(start = 0) +
geom_text(data=label_data,
aes(x=id, y=value+10, label=parent_company, hjust=hjust),
color="black", fontface="bold",alpha=0.6, size=2.5,
angle= label_data$angle, inherit.aes = FALSE )
df_byCompany %>%
ggplot(aes(x = parent_company, y = total, fill = total)) +
geom_bar(stat = "identity") +
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")
) +
coord_polar(start = 0) +
geom_text(data=label_data,
aes(x=id, y=total+10, label=parent_company, hjust=hjust),
color="black", fontface="bold",alpha=0.6, size=2.5,
angle= label_data$angle, inherit.aes = FALSE )
mutate(parent_company = factor(parent_company, levels = parent_company))
df_byCompany <- plastics %>%
filter(year == 2019) %>%
group_by(parent_company) %>%
summarise(total = sum(grand_total)) %>%
arrange(desc(total)) %>%
filter(!parent_company %in% c("Grand Total", "Unbranded", "Assorted")) %>%
slice(1:25) %>%
arrange(total)  %>%
mutate(parent_company = factor(parent_company, levels = parent_company))
label_data <- df_byCompany %>%
mutate(id = row_number())
number_of_bar <- nrow(label_data)
angle <- 90 - 360 * (label_data$id-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
label_data$hjust <- ifelse( angle < -90, 1, 0)
label_data$angle <- ifelse(angle < -90, angle+180, angle)
df_byCompany %>%
ggplot(aes(x = parent_company, y = total, fill = total)) +
geom_bar(stat = "identity") +
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")
) +
coord_polar(start = 0) +
geom_text(data=label_data,
aes(x=id, y=total+10, label=parent_company, hjust=hjust),
color="black", fontface="bold",alpha=0.6, size=2.5,
angle= label_data$angle, inherit.aes = FALSE )
df_byCompany <- plastics %>%
filter(year == 2019) %>%
group_by(parent_company) %>%
summarise(total = sum(grand_total)) %>%
arrange(desc(total)) %>%
filter(!parent_company %in% c("Grand Total", "Unbranded", "Assorted")) %>%
slice(1:10) %>%
arrange(total)  %>%
mutate(parent_company = factor(parent_company, levels = parent_company))
label_data <- df_byCompany %>%
mutate(id = row_number())
number_of_bar <- nrow(label_data)
angle <- 90 - 360 * (label_data$id-0.5) /number_of_bar     # I substract 0.5 because the letter must have the angle of the center of the bars. Not extreme right(1) or extreme left (0)
label_data$hjust <- ifelse( angle < -90, 1, 0)
label_data$angle <- ifelse(angle < -90, angle+180, angle)
df_byCompany %>%
ggplot(aes(x = parent_company, y = total, fill = total)) +
geom_bar(stat = "identity") +
theme_minimal() +
theme(
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid = element_blank(),
plot.margin = unit(rep(-1,4), "cm")
) +
coord_polar(start = 0) +
geom_text(data=label_data,
aes(x=id, y=total+10, label=parent_company, hjust=hjust),
color="black", fontface="bold",alpha=0.6, size=2.5,
angle= label_data$angle, inherit.aes = FALSE )
top_companies <- df_byCompany$parent_company
plastics %>%
filter(parent_company %in% top_companies) %>%
View()
plastics %>%
filter(parent_company %in% top_companies) %>%
ggplot(aes(x = parent_company, y = grand_total, fill = country)) +
geom_scatter()
plastics %>%
filter(parent_company %in% top_companies) %>%
ggplot(aes(x = parent_company, y = grand_total, fill = country)) +
geom_point()
plastics %>%
filter(parent_company %in% top_companies) %>%
ggplot(aes(x = parent_company, y = grand_total, color = country)) +
geom_point() +
theme_minimal()
plastics %>%
filter(parent_company %in% top_companies) %>%
ggplot(aes(x = parent_company, y = grand_total, color = country)) +
geom_jitter(size = 2) +
theme_minimal()
plastics %>%
filter(parent_company %in% top_companies) %>%
ggplot(aes(x = parent_company, y = grand_total, color = country)) +
geom_jitter(size = 1) +
theme_minimal()
plastics %>%
filter(parent_company %in% top_companies) %>%
ggplot(aes(x = parent_company, y = grand_total, color = country)) +
geom_point(size = 3) +
theme_minimal()
df_byCompany <- plastics %>%
filter(year == 2019) %>%
group_by(parent_company) %>%
summarise(total = sum(grand_total)) %>%
arrange(desc(total)) %>%
filter(!parent_company %in% c("Grand Total", "Unbranded", "Assorted")) %>%
slice(1:5) %>%
arrange(total)  %>%
mutate(parent_company = factor(parent_company, levels = parent_company))
plastics %>%
filter(parent_company %in% top_companies) %>%
ggplot(aes(x = country, y = grand_total, color = country)) +
geom_point(size = 3) +
theme_minimal() +
facet_grid(~parent_company)
plastics %>%
filter(parent_company %in% top_companies) %>%
ggplot(aes(x = country, y = grand_total, color = country)) +
geom_bar(stat = identity) +
theme_minimal() +
facet_wrap(~parent_company)
plastics %>%
filter(parent_company %in% top_companies) %>%
ggplot(aes(x = country, y = grand_total, color = country)) +
geom_bar(stat = "identity") +
theme_minimal() +
facet_wrap(~parent_company)
plastics %>%
filter(year == 2019) %>%
filter(parent_company %in% top_companies)
plastics %>%
filter(year == 2019) %>%
filter(parent_company %in% top_companies) %?%
select(country, parent_company, grand_total) %>%
spread(parent_company, grand_total)
plastics %>%
filter(year == 2019) %>%
filter(parent_company %in% top_companies) %>%
select(country, parent_company, grand_total) %>%
spread(parent_company, grand_total)
df_heatMap <- plastics %>%
filter(year == 2019) %>%
filter(parent_company %in% top_companies) %>%
select(country, parent_company, grand_total) %>%
spread(parent_company, grand_total)
heatmap(df_heatMap %>% select(-country))
heatmap(df_heatMap %>% select(-country) %>% matrix())
heatmap(df_heatMap %>% select(-country) %>% as.matrix())
df_heatMap %>% select(-country) %>% as.matrix()
matrix_heatMap <- df_heatMap %>% select(-country) %>% as.matrix()
heatmap(matrix_heatMap)
matrix_heatMap[is.na()]
matrix_heatMap[is.na(matrix_heatMap)]
matrix_heatMap[is.na(matrix_heatMap)] <- 0
heatmap(matrix_heatMap)
