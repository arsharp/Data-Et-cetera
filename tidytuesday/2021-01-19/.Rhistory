remotes::install_github("Shelmith-Kariuki/rKenyaCensus")
#list.of.packages <- c("tidytuesdayR","tidyverse","remotes","join","raster","rKenyaCensus")
list.of.packages <- c("tidytuesdayR","tidyverse","broom","hexbin","rgeos","viridis")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, require, character.only = TRUE)
# Info on data ---------------------------------------
# README :
# The data this week comes from rKenyaCensus courtesy of Shelmith Kariuki. Shelmith wrote about these datasets on her blog.
#
# rKenyaCensus is an R package that contains the 2019 Kenya Population and Housing Census results. The results were
# released by the Kenya National Bureau of Statistics in February 2020, and published in four different pdf files (Volume
# 1 - Volume 4).
#
# The 2019 Kenya Population and Housing Census was the eighth to be conducted in Kenya since 1948 and was conducted from
# the night of 24th/25th to 31st August 2019. Kenya leveraged on technology to capture data during cartographic mapping,
# enumeration and data transmission, making the 2019 Census the first paperless census to be conducted in Kenya
# Set up shapefile ---------------------------------------
spdf <- raster::getData("GADM", country = "KE", level = 1)
# Drop if region = Kenya
spdf@data = spdf@data %>%
filter(NAME_1 != "KENYA")
# Check that shapefile works
plot(spdf)
# fortify data
spdf_fortified <- tidy(spdf, region = "NAME_1")
# Calculate county centroid ---------------------------------------
centers <- cbind.data.frame(data.frame(gCentroid(spdf, byid=T), id = spdf@data$NAME_1))
# check that shape file works
ggplot() +
geom_polygon(data = spdf_fortified, aes( x = long, y = lat, group = group), fill="skyblue", color="white") +
geom_text(data=centers, aes(x=x, y=y, label=id)) +
theme_void() +
coord_map()
# Read in data ---------------------------------------
tuesdata <- tidytuesdayR::tt_load('2021-01-19')
df_gender <- tuesdata$gender
df_crops <- tuesdata$crops
df_households <- tuesdata$households
# Let's try using % female as our metric
data <- df_gender %>%
mutate(pct_female = Female / Total)
# Merge geospatial and % female data ---------------------------------------
spdf_fortified <- spdf_fortified %>%
left_join(. , data, by=c("id"="County"))
# Regular chloropleth map ---------------------------------------
ggplot() +
geom_polygon(data = spdf_fortified, aes(fill =pct_female, x = long, y = lat, group = group)) +
scale_fill_gradient(trans = "log") +
theme_void() +
coord_map()
# Prepare data for hex ---------------------------------------
# Manually code lat/long to make it look like the map
hex_data <- left_join(centers, data, by = c("id" = "County"))
hex_data$x_org <- hex_data$x
hex_data$y_org <- hex_data$y
hex_data$x <- NA
hex_data$y <- NA
hex_data <- hex_data %>%
arrange(x_org) %>%
mutate(x = row_number())
hex_data <- hex_data %>%
arrange(y_org) %>%
mutate(y = row_number())
hex_data <- hex_data %>%
dplyr::select(id, x, y, pct_female) %>%
mutate(pct_female = round(100* pct_female))
# Get data ready for map ---------------------------------------
df_forGrid <- data.frame()
# Map type requires one row per observation, so expanding dataset
for(i in 1:nrow(hex_data)){
if(!is.na(hex_data[i, 4])){
df_forGrid <- bind_rows(df_forGrid, expand.grid(hex_data[i,1], 1:hex_data[i,4]))
}
}
df_forGrid <- left_join(df_forGrid, hex_data, by = c("Var1" = "id"))
# Plot hex graph ---------------------------------------
df_forGrid %>%
filter(!is.na(pct_female)) %>%
ggplot(aes(x = x, y = y)) +
geom_hex(inherit.aes  = T,
colour = "black",
alpha = 0.8,
bins = 20) +
geom_label(inherit.aes = T,
aes(label = Var1),
size = 4,
colour = alpha("grey80", 0.1),
fill = alpha("grey20", 0.1),
# vjust = "outward",
# hjust = "outward",
label.padding = unit(0.2, "lines"),
label.r = unit(0.15, "lines"),
label.size = 0.01,
fontface = "italic") +
annotate("text", x = 1, y = 54, label="What percent of Kenya's population is female?", colour = "grey80", size=7, alpha=1, hjust=0, fontface = "bold") +
theme_void() +
xlim(-5, 60) +
ylim(-10, 55) +
scale_fill_viridis(
breaks = c(46, 48, 50, 52, 54),
labels = c("45", "46 - 47", "48 - 49", "50 - 51", "52 - 53", "54"),
name="% female",
guide = guide_legend(keyheight = unit(2.5, units = "mm"),
keywidth=unit(10, units = "mm"),
label.position = "bottom",
title.position = 'top',
nrow=1)
)  +
ggtitle( "" ) +
theme(
legend.position = c(0.3, 0.09),
legend.title=element_text(color="grey70", size = 13),
text = element_text(color = "grey70", size = 13),
plot.background = element_rect(fill = "grey30", color = NA),
panel.background = element_rect(fill = "grey30", color = NA),
legend.background = element_rect(fill = "grey30", color = NA),
plot.title = element_text(size= 13, hjust=0.1, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
)
df_forGrid %>%
filter(!is.na(pct_female)) %>%
ggplot(aes(x = x, y = y)) +
geom_hex(inherit.aes  = T,
colour = "black",
alpha = 0.8,
bins = 20) +
geom_label(inherit.aes = T,
aes(label = Var1),
size = 4,
colour = alpha("grey80", 0.1),
fill = alpha("grey20", 0.1),
# vjust = "outward",
# hjust = "outward",
label.padding = unit(0.2, "lines"),
label.r = unit(0.15, "lines"),
label.size = 0.01,
fontface = "italic") +
annotate("text", x = 1, y = 54, label="What percent of Kenya's population is female?", colour = "grey80", size=7, alpha=1, hjust=0, fontface = "bold") +
theme_void() +
xlim(-5, 60) +
ylim(-10, 55) +
scale_fill_viridis(
breaks = c(46, 48, 50, 52, 54),
labels = c("< 46", "47 - 48", "49 - 50", "51 - 52", "53 +"),
name="% female",
guide = guide_legend(keyheight = unit(2.5, units = "mm"),
keywidth=unit(10, units = "mm"),
label.position = "bottom",
title.position = 'top',
nrow=1)
)  +
ggtitle( "" ) +
theme(
legend.position = c(0.3, 0.09),
legend.title=element_text(color="grey70", size = 13),
text = element_text(color = "grey70", size = 13),
plot.background = element_rect(fill = "grey30", color = NA),
panel.background = element_rect(fill = "grey30", color = NA),
legend.background = element_rect(fill = "grey30", color = NA),
plot.title = element_text(size= 13, hjust=0.1, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
)
df_forGrid %>%
filter(!is.na(pct_female))
df_forGrid %>%
filter(!is.na(pct_female)) %>%
ggplot(aes(x = x, y = y)) +
geom_hex(inherit.aes  = T,
colour = "black",
alpha = 0.8,
bins = 20) +
geom_label(inherit.aes = T,
aes(label = Var1),
size = 4,
colour = alpha("grey80", 0.3),
fill = alpha("grey20", 0.3),
# vjust = "outward",
# hjust = "outward",
label.padding = unit(0.2, "lines"),
label.r = unit(0.15, "lines"),
label.size = 0.01,
fontface = "italic") +
annotate("text", x = 1, y = 54, label="What percent of Kenya's population is female?", colour = "grey80", size=7, alpha=1, hjust=0, fontface = "bold") +
theme_void() +
xlim(-5, 60) +
ylim(-10, 55) +
scale_fill_viridis(
breaks = c(46, 48, 50, 52, 54),
labels = c("< 46", "47 - 48", "49 - 50", "51 - 52", "53 +"),
name="% female",
guide = guide_legend(keyheight = unit(2.5, units = "mm"),
keywidth=unit(10, units = "mm"),
label.position = "bottom",
title.position = 'top',
nrow=1)
)  +
ggtitle( "" ) +
theme(
legend.position = c(0.3, 0.09),
legend.title=element_text(color="grey70", size = 13),
text = element_text(color = "grey70", size = 13),
plot.background = element_rect(fill = "grey30", color = NA),
panel.background = element_rect(fill = "grey30", color = NA),
legend.background = element_rect(fill = "grey30", color = NA),
plot.title = element_text(size= 13, hjust=0.1, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
)
df_forGrid %>%
filter(!is.na(pct_female)) %>%
ggplot(aes(x = x, y = y)) +
geom_hex(inherit.aes  = T,
colour = "black",
alpha = 0.8,
bins = 20) +
geom_label(inherit.aes = T,
aes(label = Var1),
size = 4,
colour = alpha("grey80", 0.3),
fill = alpha("grey20", 0.3),
# vjust = "outward",
# hjust = "outward",
label.padding = unit(0.2, "lines"),
label.r = unit(0.15, "lines"),
label.size = 0.01,
fontface = "italic") +
annotate("text", x = 1, y = 54, label="What percent of Kenya's population is female?", colour = "grey80", size=7, alpha=1, hjust=0, fontface = "bold") +
theme_void() +
xlim(-5, 60) +
ylim(-10, 55) +
scale_fill_viridis(
breaks = c(46, 48, 50, 52, 54),
labels = c("< 46", "47 - 48", "49 - 50", "51 - 52", "53 +"),
name="% female",
guide = guide_legend(keyheight = unit(2.5, units = "mm"),
keywidth=unit(10, units = "mm"),
label.position = "bottom",
title.position = 'top',
nrow=1)
)  +
ggtitle( "" ) +
theme(
legend.position = c(0.3, 0.09),
legend.title=element_text(color="grey70", size = 13),
text = element_text(color = "grey70", size = 13),
plot.background = element_rect(fill = "grey30", color = NA),
panel.background = element_rect(fill = "grey30", color = NA),
legend.background = element_rect(fill = "grey30", color = NA),
plot.title = element_text(size= 13, hjust=0.1, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
)
df_forGrid %>%
filter(!is.na(pct_female)) %>%
ggplot(aes(x = x, y = y)) +
geom_hex(inherit.aes  = T,
colour = "black",
alpha = 0.8,
bins = 20, size = 3) +
geom_label(inherit.aes = T,
aes(label = Var1),
size = 4,
colour = alpha("grey80", 0.3),
fill = alpha("grey20", 0.3),
vjust = "outward",
# hjust = "outward",
label.padding = unit(0.2, "lines"),
label.r = unit(0.15, "lines"),
label.size = 0.01,
fontface = "italic") +
annotate("text", x = 1, y = 54, label="What percent of Kenya's population is female?", colour = "grey80", size=7, alpha=1, hjust=0, fontface = "bold") +
theme_void() +
xlim(-5, 60) +
ylim(-10, 55) +
scale_fill_viridis(
breaks = c(46, 48, 50, 52, 54),
labels = c("< 46", "47 - 48", "49 - 50", "51 - 52", "53 +"),
name="% female",
guide = guide_legend(keyheight = unit(2.5, units = "mm"),
keywidth=unit(10, units = "mm"),
label.position = "bottom",
title.position = 'top',
nrow=1)
)  +
ggtitle( "" ) +
theme(
legend.position = c(0.3, 0.09),
legend.title=element_text(color="grey70", size = 13),
text = element_text(color = "grey70", size = 13),
plot.background = element_rect(fill = "grey30", color = NA),
panel.background = element_rect(fill = "grey30", color = NA),
legend.background = element_rect(fill = "grey30", color = NA),
plot.title = element_text(size= 13, hjust=0.1, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
)
df_forGrid %>%
filter(!is.na(pct_female)) %>%
ggplot(aes(x = x, y = y)) +
geom_hex(inherit.aes  = T,
colour = "black",
alpha = 0.8,
bins = 20, size = 0) +
geom_label(inherit.aes = T,
aes(label = Var1),
size = 4,
colour = alpha("grey80", 0.3),
fill = alpha("grey20", 0.3),
vjust = "outward",
# hjust = "outward",
label.padding = unit(0.2, "lines"),
label.r = unit(0.15, "lines"),
label.size = 0.01,
fontface = "italic") +
annotate("text", x = 1, y = 54, label="What percent of Kenya's population is female?", colour = "grey80", size=7, alpha=1, hjust=0, fontface = "bold") +
theme_void() +
xlim(-5, 60) +
ylim(-10, 55) +
scale_fill_viridis(
breaks = c(46, 48, 50, 52, 54),
labels = c("< 46", "47 - 48", "49 - 50", "51 - 52", "53 +"),
name="% female",
guide = guide_legend(keyheight = unit(2.5, units = "mm"),
keywidth=unit(10, units = "mm"),
label.position = "bottom",
title.position = 'top',
nrow=1)
)  +
ggtitle( "" ) +
theme(
legend.position = c(0.3, 0.09),
legend.title=element_text(color="grey70", size = 13),
text = element_text(color = "grey70", size = 13),
plot.background = element_rect(fill = "grey30", color = NA),
panel.background = element_rect(fill = "grey30", color = NA),
legend.background = element_rect(fill = "grey30", color = NA),
plot.title = element_text(size= 13, hjust=0.1, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
)
df_forGrid %>%
filter(!is.na(pct_female)) %>%
ggplot(aes(x = x, y = y)) +
geom_hex(inherit.aes  = T,
colour = "black",
alpha = 0.8,
bins = 20) +
geom_label(inherit.aes = T,
aes(label = Var1),
size = 4,
colour = alpha("grey80", 0.3),
fill = alpha("grey20", 0.3),
vjust = "outward",
# hjust = "outward",
label.padding = unit(0.2, "lines"),
label.r = unit(0.15, "lines"),
label.size = 0.01,
fontface = "italic") +
annotate("text", x = 1, y = 54, label="What percent of Kenya's population is female?", colour = "grey80", size=7, alpha=1, hjust=0, fontface = "bold") +
theme_void() +
xlim(-5, 60) +
ylim(-10, 55) +
scale_fill_viridis(
breaks = c(46, 48, 50, 52, 54),
labels = c("< 46", "47 - 48", "49 - 50", "51 - 52", "53 +"),
name="% female",
guide = guide_legend(keyheight = unit(2.5, units = "mm"),
keywidth=unit(10, units = "mm"),
label.position = "bottom",
title.position = 'top',
nrow=1)
)  +
ggtitle( "" ) +
theme(
legend.position = c(0.3, 0.09),
legend.title=element_text(color="grey70", size = 13),
text = element_text(color = "grey70", size = 13),
plot.background = element_rect(fill = "grey30", color = NA),
panel.background = element_rect(fill = "grey30", color = NA),
legend.background = element_rect(fill = "grey30", color = NA),
plot.title = element_text(size= 13, hjust=0.1, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
)
df_forGrid$pct_female %>% table()
df_forGrid %>%
filter(!is.na(pct_female)) %>%
ggplot(aes(x = x, y = y)) +
geom_hex(inherit.aes  = T,
colour = "black",
alpha = 0.8,
bins = 20) +
geom_label(inherit.aes = T,
aes(label = Var1),
size = 4,
colour = alpha("grey80", 0.3),
fill = alpha("grey20", 0.3),
vjust = "outward",
hjust = "outward",
label.padding = unit(0.2, "lines"),
label.r = unit(0.15, "lines"),
label.size = 0.01,
fontface = "italic") +
annotate("text", x = 1, y = 54, label="What percent of Kenya's population is female?", colour = "grey80", size=7, alpha=1, hjust=0, fontface = "bold") +
theme_void() +
xlim(-5, 60) +
ylim(-10, 55) +
scale_fill_viridis(
breaks = c(45, 47, 49, 51, 53),
labels = c("45", "46 - 47", "48 - 49", "50 - 51", "52 +"),
name="% female",
guide = guide_legend(keyheight = unit(2.5, units = "mm"),
keywidth=unit(10, units = "mm"),
label.position = "bottom",
title.position = 'top',
nrow=1)
)  +
ggtitle( "" ) +
theme(
legend.position = c(0.3, 0.09),
legend.title=element_text(color="grey70", size = 13),
text = element_text(color = "grey70", size = 13),
plot.background = element_rect(fill = "grey30", color = NA),
panel.background = element_rect(fill = "grey30", color = NA),
legend.background = element_rect(fill = "grey30", color = NA),
plot.title = element_text(size= 13, hjust=0.1, color = "#4e4d47", margin = margin(b = -0.1, t = 0.4, l = 2, unit = "cm")),
)
ggsave("kenya_gender.png",
device = "png")
tuesdata <- tidytuesdayR::tt_load('2021-01-26')
plastics <- tuesdata$plastic
# tidytuesday : 2021-01-26
# Set up environment ---------------------------------------
list.of.packages <- c("tidytuesdayR","tidyverse")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, require, character.only = TRUE)
# Info on data ---------------------------------------
# README : https://github.com/rfordatascience/tidytuesday/blob/master/data/2021/2021-01-26/readme.md
# The data this week comes from Break Free from Plastic courtesy of Sarah Sauve.
#
# Sarah put together a nice Blogpost on her approach to this data, which includes
# cleaning the data and a Shiny app!
#
#   Per Sarah:
#
#   I found out about Break Free From Plastic’s Brand Audits through my involvement
# with the local Social Justice Cooperative of Newfoundland and Labrador’s Zero Waste
# Action Team.
#
# One of my colleagues and friends proposed an audit in St. John’s, partially to
# contribute to the global audit and as part of a bigger project to understand the
# sources of plastic in our city. We completed our audit in October 2020 and are the
# first submission to BFFP from Newfoundland! You can find our data presented in this
# Shiny dashboard.
#
# It’s an interesting dataset, with lots of room to play around and so many options
# for visualization, plus plastic pollution is an important topic to talk about and
# raise awareness of! You can read BFFP’s Brand Audit Reports for 2018, 2019 and
# 2020 to get an idea of what they’ve done with the data.
# Read in data ---------------------------------------
tuesdata <- tidytuesdayR::tt_load('2021-01-26')
plastics <- tuesdata$plastic
View(plastics)
